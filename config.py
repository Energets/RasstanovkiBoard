##–º–æ–¥—É–ª—å 2 –∏–∑ 6: config.py üìÅ
##–û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ:
##–Ω–∞—Å—Ç—Ä–æ–µ–∫ (settings.json)
##—Ñ—Ä–∞–∑ (phrases.json)
##–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–µ—Ñ–æ–ª—Ç–æ–≤, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

import os
import json
from model import state

SETTINGS_FILE = "settings.json"
PHRASES_FILE = "phrases.json"

DEFAULTS = {
    "use_images": True,
    "grid": True,
    "show_labels": True,
    "default_font": {
        "family": "Arial",
        "size": 12,
        "color": "#000000"
    },
    "default_connection": {
        "width": 2,
        "color": "#000000",
        "style": "arrow"
    },
    "last_client": None
}

def load_settings():
    if os.path.exists(SETTINGS_FILE):
        with open(SETTINGS_FILE, "r", encoding="utf-8") as f:
            state["settings"] = json.load(f)
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
        for key, val in DEFAULTS.items():
            if key not in state["settings"]:
                state["settings"][key] = val
    else:
        state["settings"] = DEFAULTS.copy()

def save_settings():
    with open(SETTINGS_FILE, "w", encoding="utf-8") as f:
        json.dump(state["settings"], f, indent=2, ensure_ascii=False)

def load_phrases():
    if os.path.exists(PHRASES_FILE):
        with open(PHRASES_FILE, "r", encoding="utf-8") as f:
            state["phrases"] = json.load(f)
    else:
        state["phrases"] = {"—Ñ–∏–≥—É—Ä—ã": [], "—Å–≤—è–∑–∏": []}
